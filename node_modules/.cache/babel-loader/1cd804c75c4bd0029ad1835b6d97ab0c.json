{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/landrycarroll/Documents/Development/discord-clone/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './chat.css';\nimport ChatHeader from './ChatHeader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { useSelector } from 'react-redux';\nimport { selectChannelId, selectChannelName } from './features/appSlice';\nimport { selectUser } from './features/userSlice';\nimport db from './firebase';\nimport firebase from 'firebase';\n\nfunction Chat() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const channelId = useSelector(selectChannelId);\n  const channelName = useSelector(selectChannelName);\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    if (channelId) {\n      db.collection(\"channels\").doc(channelId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, [channelId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      user: user\n    });\n    setInput(\"\");\n  };\n\n  const toggleDisplay = () => {\n    return channelName ? {\n      display: \"none\"\n    } : {\n      display: \"flex\"\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      channelName: channelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__placeholder\",\n      style: channelName ? {\n        display: \"none\"\n      } : {\n        display: \"flex\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select a channel to start chatting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n        timestamp: message.timestamp,\n        message: message.message,\n        user: message.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(AddCircleIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          disabled: !channelId,\n          onChange: e => setInput(e.target.value),\n          placeholder: `Message #${channelName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chat__inputButton\",\n          disabled: !channelId,\n          type: \"submit\",\n          onClick: sendMessage,\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__inputIcons\",\n        children: [/*#__PURE__*/_jsxDEV(CardGiftcardIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GifIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EmojiEmotionsIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"KJsaULsvNT/igNEzqDO/ORXuJYI=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/landrycarroll/Documents/Development/discord-clone/src/Chat.js"],"names":["React","useState","useEffect","ChatHeader","AddCircleIcon","CardGiftcardIcon","GifIcon","EmojiEmotionsIcon","Message","useSelector","selectChannelId","selectChannelName","selectUser","db","firebase","Chat","user","channelId","channelName","input","setInput","messages","setMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","sendMessage","e","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","message","toggleDisplay","display","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './chat.css';\nimport ChatHeader from './ChatHeader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { useSelector } from 'react-redux';\nimport { selectChannelId, selectChannelName } from './features/appSlice';\nimport { selectUser } from './features/userSlice';\nimport db from './firebase';\nimport firebase from 'firebase';\n\nfunction Chat() {\n  const user = useSelector(selectUser);\n  const channelId = useSelector(selectChannelId);\n  const channelName = useSelector(selectChannelName);\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    if (channelId) {\n      db.collection(\"channels\")\n        .doc(channelId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"asc\")\n        .onSnapshot((snapshot) => setMessages(snapshot.docs.map((doc) => doc.data())));\n    }\n  }, [channelId]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      user: user\n    });\n\n    setInput(\"\");\n  }\n\n  const toggleDisplay = () => {\n    return channelName ? {display: \"none\"} : {display: \"flex\"};\n  }\n\n  return (\n    <div className=\"chat\">\n      <ChatHeader channelName={channelName}/>\n\n      <div className=\"chat__placeholder\" style={channelName ? {display: \"none\"} : {display: \"flex\"}}>\n        <span>Select a channel to start chatting.</span>\n      </div>\n\n      <div className=\"chat__messages\">\n        {messages.map(message => ( \n          <Message \n            timestamp={message.timestamp}\n            message={message.message}\n            user={message.user} />\n        ))}\n      </div>\n\n      <div className=\"chat__input\">\n        <AddCircleIcon fontSize=\"large\" />\n        <form>\n          <input\n            value={input}\n            disabled={!channelId}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder={`Message #${channelName}`} />\n          <button\n            className=\"chat__inputButton\"\n            disabled={!channelId}\n            type=\"submit\"\n            onClick={sendMessage}>\n            Send Message\n          </button>\n        </form>\n\n        <div className=\"chat__inputIcons\">\n          <CardGiftcardIcon fontSize=\"large\" />\n          <GifIcon fontSize=\"large\" />\n          <EmojiEmotionsIcon fontSize=\"large\"/>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}