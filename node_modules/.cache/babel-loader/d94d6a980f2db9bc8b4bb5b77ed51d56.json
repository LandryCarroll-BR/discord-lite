{"ast":null,"code":"import _slicedToArray from\"/Users/landrycarroll/Documents/Development/discord-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import'./chat.css';import ChatHeader from'./ChatHeader';import AddCircleIcon from'@material-ui/icons/AddCircle';import PhotoCameraOutlinedIcon from'@material-ui/icons/PhotoCameraOutlined';import GifIcon from'@material-ui/icons/Gif';import EmojiEmotionsIcon from'@material-ui/icons/EmojiEmotions';import Message from'./Message';import{useSelector}from'react-redux';import{selectChannelId,selectChannelName}from'./features/appSlice';import{selectUser}from'./features/userSlice';import db from'./firebase';import firebase from'firebase';function Chat(){var user=useSelector(selectUser);var channelId=useSelector(selectChannelId);var channelName=useSelector(selectChannelName);var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];useEffect(function(){if(channelId){db.collection(\"channels\").doc(channelId).collection(\"messages\").orderBy(\"timestamp\",\"asc\").onSnapshot(function(snapshot){return setMessages(snapshot.docs.map(function(doc){return doc.data();}));});}},[channelId]);var sendMessage=function sendMessage(e){e.preventDefault();db.collection(\"channels\").doc(channelId).collection(\"messages\").add({timestamp:firebase.firestore.FieldValue.serverTimestamp(),message:input,user:user});setInput(\"\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat\",children:[/*#__PURE__*/_jsx(ChatHeader,{channelName:channelName}),/*#__PURE__*/_jsx(\"div\",{className:\"chat__placeholder\",style:channelName?{display:\"none\"}:{display:\"flex\"},children:/*#__PURE__*/_jsx(\"span\",{children:\"Select a channel to start chatting.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat__messages\",children:messages.map(function(message){return/*#__PURE__*/_jsx(Message,{timestamp:message.timestamp,message:message.message,user:message.user});})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat__input\",children:[/*#__PURE__*/_jsx(AddCircleIcon,{fontSize:\"large\"}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"input\",{value:input,disabled:!channelId,onChange:function onChange(e){return setInput(e.target.value);},placeholder:\"Message #\".concat(channelName)}),/*#__PURE__*/_jsx(\"button\",{className:\"chat__inputButton\",disabled:!channelId,type:\"submit\",onClick:sendMessage,children:\"Send Message\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat__inputIcons\",children:[/*#__PURE__*/_jsx(PhotoCameraOutlinedIcon,{fontSize:\"large\"}),/*#__PURE__*/_jsx(GifIcon,{fontSize:\"large\"}),/*#__PURE__*/_jsx(EmojiEmotionsIcon,{fontSize:\"large\"})]})]})]});}export default Chat;","map":{"version":3,"sources":["/Users/landrycarroll/Documents/Development/discord-clone/src/Chat.js"],"names":["React","useState","useEffect","ChatHeader","AddCircleIcon","PhotoCameraOutlinedIcon","GifIcon","EmojiEmotionsIcon","Message","useSelector","selectChannelId","selectChannelName","selectUser","db","firebase","Chat","user","channelId","channelName","input","setInput","messages","setMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","sendMessage","e","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","message","display","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './chat.css';\nimport ChatHeader from './ChatHeader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport PhotoCameraOutlinedIcon from '@material-ui/icons/PhotoCameraOutlined';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { useSelector } from 'react-redux';\nimport { selectChannelId, selectChannelName } from './features/appSlice';\nimport { selectUser } from './features/userSlice';\nimport db from './firebase';\nimport firebase from 'firebase';\n\nfunction Chat() {\n  const user = useSelector(selectUser);\n  const channelId = useSelector(selectChannelId);\n  const channelName = useSelector(selectChannelName);\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    if (channelId) {\n      db.collection(\"channels\")\n        .doc(channelId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"asc\")\n        .onSnapshot((snapshot) => setMessages(snapshot.docs.map((doc) => doc.data())));\n    }\n  }, [channelId]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      user: user\n    });\n\n    setInput(\"\");\n  }\n\n  return (\n    <div className=\"chat\">\n      <ChatHeader channelName={channelName}/>\n\n      <div className=\"chat__placeholder\" style={channelName ? {display: \"none\"} : {display: \"flex\"}}>\n        <span>Select a channel to start chatting.</span>\n      </div>\n\n      <div className=\"chat__messages\">\n        {messages.map(message => ( \n          <Message \n            timestamp={message.timestamp}\n            message={message.message}\n            user={message.user} />\n        ))}\n      </div>\n\n      <div className=\"chat__input\">\n        <AddCircleIcon fontSize=\"large\" />\n        <form>\n          <input\n            value={input}\n            disabled={!channelId}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder={`Message #${channelName}`} />\n          <button\n            className=\"chat__inputButton\"\n            disabled={!channelId}\n            type=\"submit\"\n            onClick={sendMessage}>\n            Send Message\n          </button>\n        </form>\n\n        <div className=\"chat__inputIcons\">\n          <PhotoCameraOutlinedIcon fontSize=\"large\" />\n          <GifIcon fontSize=\"large\" />\n          <EmojiEmotionsIcon fontSize=\"large\"/>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}